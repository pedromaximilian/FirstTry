@model FirstTry.Models.ToDo

@{
    ViewData["Title"] = "Tasks";
}
<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5>Add Task</h5>
            </div>
            <div class="card-body">
                <form id="CreateForm" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <textarea asp-for="Description" class="form-control"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Date" class="control-label"></label>
                        <input asp-for="Date" class="form-control" />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                    <div class="form-group">

                        <button id="SubmitBtn" type="submit" class="btn btn-primary">
                            Submit
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5>Task List</h5>
            </div>
            <div id="TaskList" class="card-body">
                <partial name="Index">
</div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" id="detailModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalContent">
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script type="text/javascript">

        $(function () {
            $("#CreateForm").submit(function (e) {
                e.preventDefault();

                if ($("#CreateForm").valid()) {
                    // Deshabilitamos el botón de Submit
                    $("#SubmitBtn").prop("disabled", true);

                    $.ajax({
                        url: "/ToDoes/Create", // Url
                        data: $('#CreateForm').serialize(), //Datos
                        type: "post"  // Verbo HTTP
                    })
                        // Se ejecuta si todo fue bien.
                        .done(function (result) {
                            if (result != null) {
                                console.log(result)
                                // Actualiza el resultado HTML
                                $("#TaskList").html(result)
                                // Habilitamos el botón de Submit
                                $("#SubmitBtn").prop("disabled", false);
                                // Limpia el formulario
                                $('#CreateForm').trigger("reset");
                            }
                        })
                        // Se ejecuta si se produjo un error.
                        .fail(function (xhr, status, error) {
                            console.log(error)
                            // Habilitamos el botón de Submit
                            $("#SubmitBtn").prop("disabled", false);
                        })
                        // Hacer algo siempre, haya sido exitosa o no.
                        .always(function () {

                        });
                }
            });
        });

    function Delete(id) {
        $.ajax({
            url: "/ToDoes/Delete", // Url
            data: {
                id: id
            }, //Datos
            type: "delete"  // Verbo HTTP
        })
            // Se ejecuta si todo fue bien.
            .done(function (result) {
                if (result != null) {
                    //console.log(result)
                    // Actualiza el resultado HTML
                    $("#TaskList").html(result)
                }
            })
            // Se ejecuta si se produjo un error.
            .fail(function (xhr, status, error) {
                console.log(error)
            })
    }

    function ShowDetails(id) {
        
        $.ajax({
            url: "ToDoes/Details/"+id,
            type: "get",
            error: function (res) {
                console.log("Fallo: ");
                console.log(res);
            },
            success: function (res) {
                console.log(res)
                $("#modalContent").html(res);
                $('#detailModal').modal('toggle')
            }
        });
    };
</script>

}
